var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.661,1,2.85,2,1.301,3,0.471,4,0.405,5,0.405,6,2.963,7,0.691,8,2.037,9,4.393,10,1.439,11,0.039,12,0.959,13,3.6,14,1.595,15,1.661,16,0.601,17,0.863,18,2.495,19,2.963,20,0.471,21,0.023,22,1.981,23,1.595,24,1.595,25,3.6,26,0.03,27,0.03]],["title/modules/AppModule.html",[28,1.083,29,1.858]],["body/modules/AppModule.html",[1,2.776,2,1.41,3,0.368,4,0.317,5,0.317,11,0.039,16,0.687,17,0.675,18,2.589,19,2.316,20,0.368,21,0.018,26,0.025,27,0.025,28,1.618,29,3.567,30,1.729,31,1.247,32,1.549,33,1.549,34,1.247,35,2.465,36,1.549,37,2.316,38,2.316,39,2.316,40,2.589,41,2.796,42,2.251,43,2.147,44,1.549,45,1.386,46,2.814,47,2.757,48,2.814,49,1.989,50,2.814,51,2.316,52,2.814,53,2.316,54,2.814]],["title/injectables/AppService.html",[18,1.477,55,1.083]],["body/injectables/AppService.html",[3,0.499,4,0.429,5,0.429,7,0.732,8,2.113,9,4.486,11,0.038,12,1.016,14,1.69,15,1.723,16,0.499,17,0.914,18,2.349,20,0.499,21,0.025,24,1.69,26,0.031,27,0.031,55,1.723,56,2.099,57,3.139,58,3.813,59,3.813,60,3.813]],["title/controllers/AuthController.html",[0,1.083,61,1.858]],["body/controllers/AuthController.html",[0,1.44,2,1.44,3,0.521,4,0.449,5,0.449,11,0.038,16,0.641,17,0.955,20,0.521,21,0.026,22,2.193,23,1.766,26,0.032,27,0.032,61,3.037,62,3.28,63,2.816,64,3.984,65,1.766,66,3.28,67,3.984,68,3.984]],["title/modules/AuthModule.html",[28,1.083,40,1.477]],["body/modules/AuthModule.html",[2,1.528,3,0.414,4,0.356,5,0.356,11,0.038,16,0.664,17,0.759,20,0.414,21,0.02,26,0.027,27,0.027,28,1.72,30,1.403,31,1.403,32,1.743,33,1.743,34,1.403,35,2.62,36,2.327,40,2.738,42,1.403,43,2.327,44,1.743,45,1.56,49,2.238,61,2.95,65,2.581,66,2.606,69,2.606,70,2.606,71,2.606,72,3.165,73,1.962,74,3.165,75,3.165,76,3.165]],["title/injectables/AuthService.html",[55,1.083,65,1.329]],["body/injectables/AuthService.html",[3,0.382,4,0.329,5,0.329,7,0.56,8,1.773,11,0.038,12,1.216,14,1.773,15,1.967,16,0.523,17,0.7,20,0.382,21,0.019,23,1.293,24,1.293,26,0.026,27,0.026,55,1.446,56,1.606,65,1.773,73,1.809,77,2.402,78,2.925,79,4.043,80,4,81,2.828,82,2.402,83,1.825,84,2.918,85,2.202,86,2.202,87,1.181,88,1.773,89,2.402,90,2.918,91,2.918,92,2.918,93,3.293,94,2.48,95,2.918,96,2.062,97,2.402,98,2.402,99,2.918,100,2.402,101,2.402,102,2.918,103,2.062,104,2.918,105,2.918,106,2.402]],["title/classes/CreatePostDto.html",[21,0.019,107,1.65]],["body/classes/CreatePostDto.html",[3,0.164,4,0.141,5,0.141,7,0.24,10,1.806,11,0.038,12,1.204,15,1.368,16,0.495,20,0.164,21,0.017,26,0.014,27,0.014,87,1.429,88,2.103,106,1.723,107,1.152,108,0.555,109,3.279,110,1.031,111,1.195,112,2.592,113,2.093,114,2.093,115,3.117,116,2.093,117,2.093,118,3.503,119,2.592,120,3.149,121,3.149,122,1.252,123,2.992,124,2.093,125,2.093,126,3.214,127,3.786,128,1.252,129,1.252,130,3.503,131,2.093,132,2.093,133,2.093,134,1.252,135,1.297,136,1.252,137,1.252,138,3.149,139,1.031,140,1.031,141,2.093,142,3.149,143,1.252,144,1.252,145,3.149,146,1.252,147,2.695,148,1.252,149,1.723,150,1.723,151,2.093,152,2.093,153,2.093,154,1.252,155,1.252,156,2.695,157,2.219,158,2.093,159,2.093,160,2.093,161,2.093,162,2.093,163,2.093,164,1.252,165,1.252,166,3.149,167,3.149,168,1.031,169,1.252,170,2.093,171,1.252,172,2.592,173,1.252,174,1.252,175,1.252,176,1.252,177,1.252,178,1.252,179,2.093,180,1.252,181,1.252,182,1.252,183,2.695,184,2.093,185,1.252,186,2.093,187,1.928,188,2.84,189,2.226,190,2.093,191,1.031,192,1.031,193,1.252,194,0.617,195,1.252,196,1.252,197,0.776,198,0.776,199,0.885,200,1.252,201,0.885,202,2.884,203,3.308,204,0.617,205,1.252,206,1.939,207,1.252,208,1.252,209,1.252,210,1.252,211,1.252,212,1.252,213,1.252,214,1.252,215,1.252,216,1.252,217,1.252,218,1.252,219,1.252,220,1.252,221,1.252,222,1.252,223,1.252,224,1.252,225,1.252,226,1.031,227,1.031,228,1.252,229,1.252,230,1.252,231,1.252,232,1.031,233,1.252,234,0.885,235,2.093,236,0.885,237,1.252]],["title/classes/CreatePostsMetaOptionsDto.html",[21,0.019,135,1.858]],["body/classes/CreatePostsMetaOptionsDto.html",[3,0.455,4,0.391,5,0.391,7,0.667,10,1.797,11,0.038,12,1.198,15,1.256,16,0.455,20,0.455,21,0.029,26,0.029,27,0.029,87,1.327,108,1.54,109,3.521,111,1.992,135,2.786,187,2.899,189,3.177,194,1.713,198,3.088,199,3.521,234,3.177,236,3.177,238,2.862,239,3.476,240,3.476,241,3.476,242,3.476,243,3.476]],["title/classes/CreateUserDTO.html",[21,0.019,244,1.65]],["body/classes/CreateUserDTO.html",[3,0.357,4,0.307,5,0.307,7,0.524,10,2.008,11,0.038,12,1.271,15,1.724,16,0.357,20,0.357,21,0.025,26,0.025,27,0.025,87,1.409,88,1.692,93,3.625,96,2.698,108,1.209,111,1.692,157,2.245,168,2.245,187,2.626,188,2.698,189,3.372,191,3.142,192,2.245,194,1.344,244,2.101,245,4.134,246,2.245,247,3.142,248,3.817,249,2.727,250,2.727,251,2.727,252,2.727,253,2.727,254,2.727,255,2.727,256,3.817,257,3.817,258,3.817,259,3.817,260,3.817,261,2.727,262,3.817,263,2.727,264,2.727,265,2.727,266,2.727,267,3.817,268,2.727,269,2.727,270,2.727,271,2.727,272,2.727,273,2.727,274,2.727]],["title/classes/GetUsersParamDto.html",[21,0.019,275,1.65]],["body/classes/GetUsersParamDto.html",[3,0.435,4,0.375,5,0.375,7,0.639,10,1.331,11,0.038,12,0.887,16,0.638,20,0.435,21,0.032,26,0.028,27,0.028,87,1.29,94,3.211,108,1.475,111,1.937,126,2.064,187,1.833,188,3.089,194,1.64,201,2.353,203,3.598,204,1.64,275,2.406,276,3.598,277,2.709,278,2.741,279,2.064,280,3.329,281,4.37,282,4.37,283,3.329,284,3.329,285,3.598,286,3.329,287,3.329,288,3.329,289,2.741]],["title/classes/PatchPostsDto.html",[21,0.019,290,1.858]],["body/classes/PatchPostsDto.html",[3,0.442,4,0.38,5,0.38,7,0.648,10,1.35,11,0.038,12,0.9,16,0.643,20,0.442,21,0.029,26,0.029,27,0.029,87,0.997,94,3.229,107,1.859,108,1.496,111,1.955,123,2.428,187,2.428,194,1.664,197,2.093,202,2.78,204,1.664,206,1.496,279,2.093,285,3.631,289,2.78,290,2.734,291,3.631,292,2.78,293,3.631,294,4.411,295,3.377,296,3.377,297,3.377,298,3.377,299,2.78,300,2.78]],["title/classes/PatchUserDto.html",[21,0.019,301,1.858]],["body/classes/PatchUserDto.html",[3,0.518,4,0.446,5,0.446,11,0.037,16,0.639,20,0.518,21,0.026,26,0.032,27,0.032,108,1.756,197,2.456,244,2.181,293,4.019,301,3.026,302,3.262,303,3.262,304,4.882,305,3.962,306,3.262,307,4.019,308,3.262,309,3.962]],["title/controllers/PostsController.html",[0,1.083,310,1.858]],["body/controllers/PostsController.html",[0,0.798,2,0.798,3,0.289,4,0.249,5,0.249,7,0.424,8,1.453,10,1.563,11,0.039,12,1.042,14,1.733,16,0.605,17,0.53,20,0.289,21,0.014,22,1.216,23,0.979,24,0.979,26,0.021,27,0.021,63,1.561,78,2.896,85,2.152,86,2.152,87,0.968,88,1.733,107,2.382,119,2.699,123,2.835,197,2.032,198,1.369,204,1.088,206,1.917,290,2.682,299,1.818,300,2.699,310,2.032,311,1.818,312,3.278,313,3.278,314,3.278,315,2.209,316,3.278,317,2.317,318,3.278,319,3.278,320,3.278,321,2.209,322,2.209,323,3.278,324,2.209,325,2.699,326,2.209,327,3.278,328,2.209,329,3.278,330,2.699,331,2.209,332,2.209,333,1.818,334,1.818,335,2.699,336,1.088,337,1.818,338,1.818,339,3.219,340,3.219,341,1.818,342,2.209,343,2.209,344,2.209,345,2.209,346,2.209,347,2.209,348,3.278,349,2.699,350,2.209,351,2.209,352,2.209,353,2.209]],["title/modules/PostsModule.html",[28,1.083,41,1.65]],["body/modules/PostsModule.html",[2,1.541,3,0.42,4,0.361,5,0.361,11,0.038,16,0.668,17,0.769,20,0.42,21,0.021,26,0.028,27,0.028,28,1.731,30,1.422,31,1.422,32,1.766,33,1.766,34,1.422,35,2.348,36,1.766,41,3.118,42,2.355,43,2.348,44,1.766,45,1.581,47,2.268,49,2.268,310,2.97,336,2.619,337,2.641,354,2.641,355,2.641,356,3.208,357,3.208,358,3.208,359,3.208,360,3.208]],["title/injectables/PostsService.html",[55,1.083,336,1.477]],["body/injectables/PostsService.html",[3,0.407,4,0.35,5,0.35,7,0.597,8,1.851,11,0.039,12,1.113,14,1.378,15,1.51,16,0.546,17,0.746,20,0.407,21,0.02,22,1.712,23,1.378,24,1.378,26,0.027,27,0.027,55,1.51,56,1.712,78,2.596,81,2.198,82,2.56,83,1.886,85,2.299,86,2.299,87,1.233,88,1.851,89,2.56,98,2.56,101,2.56,103,2.198,112,3.439,336,2.058,361,2.56,362,3.439,363,3.11,364,3.11,365,3.11,366,3.11,367,3.11,368,3.11,369,4.177,370,3.11,371,4.177,372,3.11]],["title/modules/UserModule.html",[28,1.083,42,1.329]],["body/modules/UserModule.html",[2,1.144,3,0.414,4,0.356,5,0.356,11,0.038,16,0.664,17,0.759,20,0.414,21,0.02,26,0.027,27,0.027,28,1.72,30,1.403,31,1.403,32,1.743,33,1.743,34,1.403,35,2.327,36,2.327,40,1.56,42,2.463,43,2.327,44,1.743,45,1.56,47,2.238,51,2.606,73,2.62,83,2.31,373,2.606,374,2.606,375,2.606,376,3.165,377,2.62,378,3.165,379,2.606,380,3.165,381,3.165,382,3.165,383,3.165,384,3.165]],["title/controllers/UsersController.html",[0,1.083,377,1.858]],["body/controllers/UsersController.html",[0,0.655,2,0.655,3,0.237,4,0.204,5,0.204,7,0.348,8,1.25,10,1.385,11,0.039,12,0.923,14,1.535,15,0.655,16,0.587,17,0.435,20,0.237,21,0.012,22,0.998,23,0.804,24,1.535,26,0.018,27,0.018,63,1.282,78,2.738,83,0.725,85,1.907,86,1.907,87,1.251,88,1.535,123,2.152,126,1.749,139,2.323,140,2.323,204,0.893,206,1.877,232,2.323,244,2.469,275,2.469,277,2.625,279,3.001,301,2.78,308,1.493,317,1.994,325,1.493,330,1.493,333,1.493,334,2.323,335,2.852,338,1.493,339,2.323,340,2.323,341,1.493,349,1.493,377,1.749,379,1.493,385,1.493,386,2.822,387,3.464,388,2.822,389,1.813,390,4.235,391,1.813,392,1.813,393,4.235,394,3.218,395,2.763,396,1.813,397,1.813,398,2.822,399,1.813,400,2.822,401,1.813,402,1.813,403,1.813,404,1.813,405,1.813,406,1.813,407,1.813,408,3.464,409,1.813,410,1.493,411,1.493,412,1.813,413,3.464,414,1.813,415,1.813,416,1.813,417,1.813,418,1.813,419,1.813,420,1.813,421,2.822,422,1.813,423,1.813,424,1.813,425,1.813,426,1.813,427,1.813,428,1.813,429,1.813,430,1.813,431,1.813,432,1.813,433,1.813,434,1.813,435,1.813,436,1.813,437,1.813]],["title/injectables/UsersService.html",[55,1.083,83,1.199]],["body/injectables/UsersService.html",[3,0.294,4,0.253,5,0.253,7,0.432,8,1.473,11,0.039,12,1.053,14,1.473,15,1.683,16,0.517,17,0.54,20,0.294,21,0.026,23,0.997,24,1.473,26,0.022,27,0.022,55,1.201,56,1.239,65,2.235,73,1.395,78,2.684,79,1.853,81,2.35,83,1.329,85,2.176,86,2.176,87,1.167,88,1.752,94,2.451,96,3.086,97,1.853,100,1.853,103,1.591,206,0.997,247,3.595,275,2.684,277,2.451,279,3.127,362,3.255,394,3.255,395,2.794,410,1.853,411,1.853,438,1.853,439,3.325,440,3.325,441,3.325,442,2.251,443,2.251,444,2.251,445,2.251,446,3.325,447,2.251,448,2.251,449,2.251,450,2.251,451,2.251,452,2.251,453,2.251,454,3.325,455,3.325,456,2.251]],["title/coverage.html",[457,2.88]],["body/coverage.html",[0,1.727,1,1.697,5,0.308,6,2.254,11,0.038,18,1.349,21,0.034,26,0.025,27,0.025,34,1.213,55,1.727,57,2.254,61,1.697,62,2.254,65,1.213,77,2.254,83,1.095,87,0.808,107,1.507,109,2.705,110,2.254,135,1.697,198,1.697,199,1.935,238,2.254,244,1.507,245,2.254,246,2.254,275,1.507,276,2.254,277,1.697,278,2.254,290,1.697,291,2.254,292,2.254,301,1.697,302,2.254,303,2.254,310,1.697,311,2.254,317,1.935,336,1.349,361,2.254,377,1.697,385,2.254,438,2.254,457,1.935,458,2.254,459,2.738,460,2.738,461,5.81,462,4.779,463,4.413,464,4.413,465,2.254,466,2.738,467,2.738,468,3.827,469,2.738,470,2.738,471,2.738,472,2.738,473,2.738]],["title/dependencies.html",[31,1.596,474,2.068]],["body/dependencies.html",[11,0.039,17,0.909,21,0.031,26,0.031,27,0.031,31,1.681,194,1.868,201,2.68,204,1.868,306,3.122,307,3.122,475,3.792,476,3.792,477,5.188,478,3.792,479,3.792,480,3.792,481,3.792,482,3.792,483,3.792,484,3.792,485,3.792,486,3.792,487,3.792,488,3.792,489,3.792]],["title/miscellaneous/enumerations.html",[490,1.557,491,2.965]],["body/miscellaneous/enumerations.html",[7,0.702,11,0.038,26,0.03,27,0.03,115,3.822,123,2.555,149,3.822,150,3.822,172,3.822,236,4.114,395,3.281,490,2.266,491,3.009,492,3.655,493,3.655,494,3.655,495,4.642,496,4.642,497,3.655,498,4.642,499,4.642]],["title/miscellaneous/functions.html",[490,1.557,500,2.965]],["body/miscellaneous/functions.html",[7,0.856,11,0.034,26,0.034,27,0.034,34,2.468,465,3.672,490,2.765,500,3.672,501,4.46]],["title/index.html",[7,0.482,502,2.512,503,2.512]],["body/index.html",[4,0.204,11,0.036,26,0.018,27,0.018,45,2.21,53,1.493,126,2.423,206,0.804,226,3.986,227,1.493,234,1.282,457,1.282,458,2.323,504,1.813,505,1.813,506,3.464,507,2.822,508,1.813,509,1.813,510,1.813,511,1.813,512,2.822,513,3.464,514,1.813,515,1.813,516,3.909,517,1.813,518,4.841,519,1.813,520,4.682,521,1.813,522,1.813,523,1.813,524,2.822,525,1.813,526,2.822,527,1.813,528,3.464,529,1.813,530,2.822,531,1.813,532,1.813,533,1.813,534,1.813,535,1.813,536,3.909,537,4.485,538,2.822,539,1.813,540,1.813,541,1.813,542,1.813,543,1.813,544,4.485,545,2.822,546,3.909,547,1.813,548,2.822,549,1.813,550,1.813,551,2.822,552,4.235,553,3.909,554,1.813,555,2.822,556,1.813,557,1.813,558,1.813,559,1.813,560,3.909,561,1.813,562,1.813,563,1.813,564,1.813,565,1.813,566,2.822,567,1.813,568,1.813,569,1.813,570,1.813,571,1.813,572,2.822,573,1.813,574,1.813,575,1.813,576,2.822,577,1.813,578,1.813,579,3.218,580,2.822,581,1.813,582,1.813,583,1.813,584,1.813,585,1.813,586,1.813,587,1.813,588,1.813,589,2.822,590,1.813,591,1.813,592,1.813,593,1.813,594,3.464,595,1.813,596,1.813,597,1.813,598,1.813,599,1.813,600,1.813,601,2.822,602,1.813,603,1.813,604,1.813,605,1.813,606,1.813,607,2.822,608,1.813,609,1.813,610,1.813,611,2.822,612,2.822,613,1.813,614,1.813,615,1.813,616,1.813,617,1.813,618,1.813,619,1.813,620,1.813,621,1.813,622,1.813,623,1.493,624,1.813,625,1.813,626,1.813,627,1.813,628,1.813,629,1.813,630,1.493]],["title/modules.html",[30,1.806]],["body/modules.html",[11,0.032,26,0.032,27,0.032,29,2.556,30,1.827,40,2.031,41,2.27,42,1.827,579,4.61,631,5.6,632,5.6,633,5.6]],["title/overview.html",[634,3.355]],["body/overview.html",[2,1.059,11,0.037,18,2.254,26,0.026,27,0.026,28,1.059,29,3.529,30,1.298,31,1.298,32,1.613,33,1.613,34,1.298,35,1.613,36,1.613,37,2.412,38,2.412,39,2.412,40,2.622,41,2.999,42,2.414,43,2.208,44,1.613,45,1.444,56,1.613,65,2.414,69,2.412,70,2.412,71,2.412,83,2.178,108,1.298,336,2.254,354,2.412,355,2.412,373,2.412,374,2.412,375,2.412,634,2.412,635,4.574,636,2.93]],["title/properties.html",[111,1.596,474,2.068]],["body/properties.html",[11,0.038,26,0.034,27,0.034,111,1.94,206,1.94,623,3.604,630,3.604,637,4.378,638,4.378,639,4.378]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":638,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["01t00:00:00z",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{}}}],["1.1.26",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["10})@apiquery({name",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{}}}],["11.0.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["1234",{"_index":456,"title":{},"body":{"injectables/UsersService.html":{}}}],["1234})@type(undefined",{"_index":283,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["2.1.0",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":330,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{}}}],["2023",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["25",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":635,"title":{},"body":{"overview.html":{}}}],["6",{"_index":636,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["alice",{"_index":454,"title":{},"body":{"injectables/UsersService.html":{}}}],["allowing",{"_index":567,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":617,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":339,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostsDto.html":{}}}],["apiproperty({description",{"_index":295,"title":{},"body":{"classes/PatchPostsDto.html":{}}}],["apiproperty,partialtype",{"_index":298,"title":{},"body":{"classes/PatchPostsDto.html":{}}}],["apipropertyoptional",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apiquery",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":340,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":537,"title":{},"body":{"index.html":{}}}],["applications",{"_index":512,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argument",{"_index":265,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["array",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["associated",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":61,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":623,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":65,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice:authservice",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["aws",{"_index":555,"title":{},"body":{"index.html":{}}}],["backers",{"_index":618,"title":{},"body":{"index.html":{}}}],["based",{"_index":550,"title":{},"body":{"index.html":{}}}],["board",{"_index":610,"title":{},"body":{"index.html":{}}}],["body",{"_index":333,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":633,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":631,"title":{},"body":{"modules.html":{}}}],["building",{"_index":507,"title":{},"body":{"index.html":{}}}],["channel",{"_index":582,"title":{},"body":{"index.html":{}}}],["check",{"_index":544,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":566,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":549,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":69,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":70,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":71,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":354,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":356,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":355,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":373,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":374,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":375,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":573,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["configuration",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["connect",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(createuserdto",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(headers",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(isauth",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(params",{"_index":346,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(userservice",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["content:'test",{"_index":371,"title":{},"body":{"injectables/PostsService.html":{}}}],["content?:string",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":343,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"overview.html":{}}}],["controllers:[userscontroller",{"_index":382,"title":{},"body":{"modules/UserModule.html":{}}}],["courses",{"_index":588,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":457,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{}}}],["created",{"_index":320,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":107,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostdto:createpostdto",{"_index":351,"title":{},"body":{"controllers/PostsController.html":{}}}],["createposts",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{}}}],["createposts(@body",{"_index":350,"title":{},"body":{"controllers/PostsController.html":{}}}],["createposts(createpostdto",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostsmetaoptionsdto",{"_index":135,"title":{"classes/CreatePostsMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":244,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createusers",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["date",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":584,"title":{},"body":{"index.html":{}}}],["default",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["defaultvaluepipe",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":536,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":554,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":545,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":565,"title":{},"body":{"index.html":{}}}],["description",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["description:'get",{"_index":286,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["description:'users",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["development",{"_index":521,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":596,"title":{},"body":{"index.html":{}}}],["discord",{"_index":581,"title":{},"body":{"index.html":{}}}],["dive",{"_index":583,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":458,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dtos/create",{"_index":338,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":410,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":341,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":531,"title":{},"body":{"index.html":{}}}],["each",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["each:true",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":508,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":542,"title":{},"body":{"index.html":{}}}],["email",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{},"injectables/UsersService.html":{}}}],["email:string",{"_index":271,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["endpoint",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["ensure",{"_index":540,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":600,"title":{},"body":{"index.html":{}}}],["enum",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":491,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["example:1",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{}}}],["example:10",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{}}}],["example:1234",{"_index":287,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["experience",{"_index":586,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["exports:[authservice",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{}}}],["exports:[usersservice",{"_index":384,"title":{},"body":{"modules/UserModule.html":{}}}],["express",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":293,"title":{},"body":{"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["fast",{"_index":558,"title":{},"body":{"index.html":{}}}],["featured",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl?:string",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":569,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":560,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":362,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getusersparamdto",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":364,"title":{},"body":{"injectables/PostsService.html":{}}}],["findall(userid:string",{"_index":367,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["firstname",{"_index":247,"title":{},"body":{"classes/CreateUserDTO.html":{},"injectables/UsersService.html":{}}}],["firstname:string",{"_index":269,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["focus",{"_index":568,"title":{},"body":{"index.html":{}}}],["follow",{"_index":604,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":506,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["full",{"_index":599,"title":{},"body":{"index.html":{}}}],["function",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":500,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":563,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":325,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["get('/:id/')@apioperation({summary",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getposts",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param",{"_index":345,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(params",{"_index":324,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":502,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":275,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["github:nestjs/swagger",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["given",{"_index":266,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["graph",{"_index":591,"title":{},"body":{"index.html":{}}}],["grow",{"_index":614,"title":{},"body":{"index.html":{}}}],["hands",{"_index":585,"title":{},"body":{"index.html":{}}}],["handy",{"_index":574,"title":{},"body":{"index.html":{}}}],["headers",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":589,"title":{},"body":{"index.html":{}}}],["here",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["html",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["http:localhost:3000/users",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{}}}],["https://example.com/image.jpg",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":627,"title":{},"body":{"index.html":{}}}],["id",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"injectables/UsersService.html":{}}}],["id:number",{"_index":289,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{}}}],["identifier",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["imported",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{}}}],["imports:[forwardref(()=>authmodule",{"_index":381,"title":{},"body":{"modules/UserModule.html":{}}}],["imports:[forwardref(()=>usermodule",{"_index":75,"title":{},"body":{"modules/AuthModule.html":{}}}],["imports:[usermodule",{"_index":359,"title":{},"body":{"modules/PostsModule.html":{}}}],["include",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":547,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":571,"title":{},"body":{"index.html":{}}}],["inject",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["inject(forwardref(()=>usersservice",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":55,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":380,"title":{},"body":{"modules/UserModule.html":{}}}],["install",{"_index":562,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":519,"title":{},"body":{"index.html":{}}}],["interact",{"_index":592,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isdate",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isemail",{"_index":262,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isenum",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus)@isnotempty()@apiproperty({description",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype)@isnotempty()@apiproperty({description",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":285,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{}}}],["isint()@isoptional()@apipropertyoptional({description",{"_index":280,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["isjson",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{}}}],["isnotempty()@isemail",{"_index":249,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isnotempty()@isstring",{"_index":239,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{}}}],["isoptional",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{}}}],["isoptional()@isarray()@isstring({each",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional()@isarray()@validatenested({each",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isoptional()@isjson()@apipropertyoptional({description",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{}}}],["isstring()@isnotempty()@matches(/^[a",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":251,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":255,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@isoptional()@apipropertyoptional({description",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring()@isoptional()@minlength(3",{"_index":253,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["isstring()@minlength(4)@isnotempty()@apiproperty({description",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring({each:true",{"_index":223,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isurl",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isurl()@isoptional()@apipropertyoptional({description",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":607,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":609,"title":{},"body":{"index.html":{}}}],["joe@yopmail.com",{"_index":453,"title":{},"body":{"injectables/UsersService.html":{}}}],["john",{"_index":452,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":620,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":624,"title":{},"body":{"index.html":{}}}],["key",{"_index":234,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"index.html":{}}}],["key:string",{"_index":242,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{}}}],["lastname",{"_index":248,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["lastname?:string",{"_index":270,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["layout",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["learn",{"_index":577,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":630,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":612,"title":{},"body":{"index.html":{}}}],["limit",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":606,"title":{},"body":{"index.html":{}}}],["list",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email:string,password:string,id:string",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":548,"title":{},"body":{"index.html":{}}}],["loop",{"_index":602,"title":{},"body":{"index.html":{}}}],["makes",{"_index":556,"title":{},"body":{"index.html":{}}}],["managing",{"_index":570,"title":{},"body":{"index.html":{}}}],["mapped",{"_index":309,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["markdown",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matches",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{}}}],["matches(/^[a",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":552,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":263,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["maxlength(96",{"_index":268,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["message",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{}}}],["message:'password",{"_index":273,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["message:'slug",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["meta",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["metaoptions?:createpostsmetaoptionsdto",{"_index":237,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mice@yopmail.com",{"_index":455,"title":{},"body":{"injectables/UsersService.html":{}}}],["minlength",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{}}}],["minlength(3",{"_index":267,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["minlength(3,{each:true",{"_index":224,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(4",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":272,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["miscellaneous",{"_index":490,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":611,"title":{},"body":{"index.html":{}}}],["mode",{"_index":524,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":546,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":625,"title":{},"body":{"index.html":{}}}],["name",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name:'limit",{"_index":420,"title":{},"body":{"controllers/UsersController.html":{}}}],["name:'page",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{}}}],["need",{"_index":597,"title":{},"body":{"index.html":{}}}],["nest",{"_index":513,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":629,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":226,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":306,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":564,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":505,"title":{},"body":{"index.html":{}}}],["npm",{"_index":518,"title":{},"body":{"index.html":{}}}],["number",{"_index":279,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{}}}],["offer",{"_index":608,"title":{},"body":{"index.html":{}}}],["official",{"_index":553,"title":{},"body":{"index.html":{}}}],["open",{"_index":613,"title":{},"body":{"index.html":{}}}],["operations",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["optional",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDTO.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options.dto",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":238,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:6",{"_index":240,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{}}}],["options.dto.ts:9",{"_index":241,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":634,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":474,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":334,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["param.dto",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto.ts",{"_index":278,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:13",{"_index":284,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":327,"title":{},"body":{"controllers/PostsController.html":{}}}],["parseintpipe",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":598,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":305,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":294,"title":{},"body":{"classes/PatchPostsDto.html":{}}}],["partialtype(createuserdto",{"_index":304,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["pass",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["password",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDTO.html":{}}}],["password:string",{"_index":274,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["patch",{"_index":335,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patchpostsdto",{"_index":290,"title":{"classes/PatchPostsDto.html":{}},"body":{"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchpostsdto:patchpostsdto",{"_index":353,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchuserdto",{"_index":301,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["patchuserdto:patchuserdto",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(@body",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchusers(patchuserdto",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{}}}],["platform",{"_index":551,"title":{},"body":{"index.html":{}}}],["please",{"_index":580,"title":{},"body":{"index.html":{}}}],["possible",{"_index":543,"title":{},"body":{"index.html":{}}}],["post",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto",{"_index":299,"title":{},"body":{"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["post.dto.ts:110",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:17",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:26",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:37",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:46",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:54",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:62",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:70",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:78",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:89",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["posts.controller",{"_index":358,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts.dto",{"_index":342,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.dto.ts",{"_index":292,"title":{},"body":{"classes/PatchPostsDto.html":{},"coverage.html":{}}}],["posts.dto.ts:13",{"_index":297,"title":{},"body":{"classes/PatchPostsDto.html":{}}}],["postscontroller",{"_index":310,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":41,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":336,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["postsservice:postsservice",{"_index":344,"title":{},"body":{"controllers/PostsController.html":{}}}],["poststatus",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["poststatus.draft",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posttype",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype.post",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posttype:posttype",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["prefix",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":526,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":504,"title":{},"body":{"index.html":{}}}],["project",{"_index":516,"title":{},"body":{"index.html":{}}}],["properties",{"_index":111,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":337,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":379,"title":{},"body":{"modules/UserModule.html":{},"controllers/UsersController.html":{}}}],["providers:[postsservice",{"_index":360,"title":{},"body":{"modules/PostsModule.html":{}}}],["providers:[usersservice",{"_index":383,"title":{},"body":{"modules/UserModule.html":{}}}],["public",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["publishon",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["publishon?:date",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["query",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":578,"title":{},"body":{"index.html":{}}}],["read",{"_index":621,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":535,"title":{},"body":{"index.html":{}}}],["real",{"_index":593,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":515,"title":{},"body":{"index.html":{}}}],["req",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["required:false",{"_index":232,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["requiring",{"_index":559,"title":{},"body":{"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resources",{"_index":572,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["return'sample_token",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":520,"title":{},"body":{"index.html":{}}}],["runs",{"_index":541,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":509,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["schema?:string",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["second",{"_index":264,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["sent",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{}}}],["series",{"_index":499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":510,"title":{},"body":{"index.html":{}}}],["settings",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["setup",{"_index":517,"title":{},"body":{"index.html":{}}}],["side",{"_index":511,"title":{},"body":{"index.html":{}}}],["sidebar",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["simple",{"_index":561,"title":{},"body":{"index.html":{}}}],["slug",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["slug:string",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["specific",{"_index":282,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":616,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.service.ts",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:5",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["src/auth/auth.module.ts",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:11",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:17",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":291,"title":{},"body":{"classes/PatchPostsDto.html":{},"coverage.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:12",{"_index":326,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:26",{"_index":322,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:37",{"_index":332,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/posts/posts.module.ts",{"_index":357,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":361,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:10",{"_index":365,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:6",{"_index":363,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":245,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":276,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":302,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:14",{"_index":445,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:33",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:9",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:50",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:61",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:68",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":376,"title":{},"body":{"modules/UserModule.html":{}}}],["start",{"_index":522,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":525,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":527,"title":{},"body":{"index.html":{}}}],["started",{"_index":503,"title":{"index.html":{}},"body":{}}],["starter",{"_index":514,"title":{},"body":{"index.html":{}}}],["statements",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["status:200",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{}}}],["status:poststatus",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["stay",{"_index":601,"title":{},"body":{"index.html":{}}}],["steps",{"_index":538,"title":{},"body":{"index.html":{}}}],["story",{"_index":498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":557,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":349,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@apiquery({name",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{}}}],["successfully'})@patch",{"_index":331,"title":{},"body":{"controllers/PostsController.html":{}}}],["successfully'})@post",{"_index":321,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":348,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary:'fetches",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{}}}],["support",{"_index":579,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":632,"title":{},"body":{"modules.html":{}}}],["table",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tags?:string",{"_index":228,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["take",{"_index":539,"title":{},"body":{"index.html":{}}}],["technology",{"_index":225,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["test",{"_index":530,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":533,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":532,"title":{},"body":{"index.html":{}}}],["tests",{"_index":528,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":615,"title":{},"body":{"index.html":{}}}],["things",{"_index":260,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.isauth",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservice.findall(params.id",{"_index":347,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getusersparamdto,limit,page",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["time",{"_index":594,"title":{},"body":{"index.html":{}}}],["title",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["title:'tiiei",{"_index":370,"title":{},"body":{"injectables/PostsService.html":{}}}],["title:'tiieifsdf",{"_index":372,"title":{},"body":{"injectables/PostsService.html":{}}}],["title:string",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["touch",{"_index":622,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@apipropertyoptional({description",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined)@apipropertyoptional({type",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":628,"title":{},"body":{"index.html":{}}}],["type",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["type(()=>createpostsmetaoptionsdto",{"_index":230,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type(()=>number",{"_index":288,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["type:'array",{"_index":231,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type:'number",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{}}}],["type:'object",{"_index":233,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["type:'string",{"_index":235,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["types",{"_index":307,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":227,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["undefined",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":529,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":639,"title":{},"body":{"properties.html":{}}}],["update",{"_index":329,"title":{},"body":{"controllers/PostsController.html":{}}}],["updated",{"_index":300,"title":{},"body":{"classes/PatchPostsDto.html":{},"controllers/PostsController.html":{}}}],["updated'})@isint()@isnotempty",{"_index":296,"title":{},"body":{"classes/PatchPostsDto.html":{}}}],["updatepost",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":352,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostsdto",{"_index":328,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":603,"title":{},"body":{"index.html":{}}}],["url",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["url'})@apiproperty({description",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":281,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["user.dto",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":303,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user:user",{"_index":369,"title":{},"body":{"injectables/PostsService.html":{}}}],["user=this.userservice.findonebyid(id",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["user=this.userservice.findonebyid(userid",{"_index":368,"title":{},"body":{"injectables/PostsService.html":{}}}],["userid",{"_index":366,"title":{},"body":{"injectables/PostsService.html":{}}}],["usermodule",{"_index":42,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usermodule,postsmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["users",{"_index":277,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users'})@apiresponse({status",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":378,"title":{},"body":{"modules/UserModule.html":{}}}],["users.dto",{"_index":308,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["users.dto.ts",{"_index":246,"title":{},"body":{"classes/CreateUserDTO.html":{},"coverage.html":{}}}],["users.dto.ts:14",{"_index":254,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["users.dto.ts:18",{"_index":250,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["users.dto.ts:28",{"_index":261,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["users.dto.ts:9",{"_index":252,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["userscontroller",{"_index":377,"title":{"controllers/UsersController.html":{}},"body":{"modules/UserModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userservice",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["userservice:usersservice",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["usersservice",{"_index":83,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"modules/UserModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice:usersservice",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{}}}],["using",{"_index":595,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validatenested({each:true",{"_index":229,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validationpipe",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"classes/CreateUserDTO.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostsDto.html":{},"dependencies.html":{}}}],["value",{"_index":236,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostsMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["value:any",{"_index":243,"title":{},"body":{"classes/CreatePostsMetaOptionsDto.html":{}}}],["various",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":637,"title":{},"body":{"properties.html":{}}}],["video",{"_index":587,"title":{},"body":{"index.html":{}}}],["visit",{"_index":576,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":590,"title":{},"body":{"index.html":{}}}],["void",{"_index":323,"title":{},"body":{"controllers/PostsController.html":{}}}],["watch",{"_index":523,"title":{},"body":{"index.html":{}}}],["website",{"_index":626,"title":{},"body":{"index.html":{}}}],["working",{"_index":575,"title":{},"body":{"index.html":{}}}],["world",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":605,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":619,"title":{},"body":{"index.html":{}}}],["you're",{"_index":534,"title":{},"body":{"index.html":{}}}],["z0",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*?&]{8",{"_index":259,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["z])(?=.*[a",{"_index":256,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":257,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["za",{"_index":258,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from 'src/users/users.module';\nimport { PostsModule } from 'src/posts/posts.module';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  // all our modules will be imported here\n  imports: [UserModule,PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService:AuthService){}\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UserModule } from 'src/users/users.module';\n\n@Module({\n  imports:[forwardRef(()=>UserModule)],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports:[AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(()=>UsersService))\n    private readonly userService:UsersService\n  ){}\n\n  public login(email:string,password:string,id:string){\n    const user=this.userService.findOneById(id);\n\n    return'SAMPLE_TOKEN'\n  }\n\n  public isAuth(){\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'Content of the post, can be HTML or Markdown', example: 'This is my first post'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@IsOptional()@ApiPropertyOptional({description: 'URL of the featured image for the post', example: 'https://example.com/image.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostsMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)@ApiPropertyOptional({type: 'array', required: false, items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(postType)@IsNotEmpty()@ApiProperty({description: 'Type of the post', enum: postType, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'Date when the post is scheduled to be published', example: '2023-10-01T00:00:00Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsJSON()@ApiPropertyOptional({description: 'Configuration object for the post, can include various settings', example: '{\"layout\": \"default\", \"sidebar\": true}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'slug like my-url'})@ApiProperty({description: 'Slug for the post, should be URL friendly', example: 'my-first-post'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(postStatus)@IsNotEmpty()@ApiProperty({description: 'Status of the post', enum: postStatus, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     String[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})@ApiPropertyOptional({description: 'Array of tags associated with the post', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@IsNotEmpty()@ApiProperty({description: 'Title of the post', example: 'My First Post'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsDate, IsEnum, IsJSON, IsNotEmpty, IsOptional, IsString, IsUrl, Matches, MinLength, ValidateNested } from \"class-validator\";\nimport { postStatus } from \"../enums/poststatus.enum\";\nimport { postType } from \"../enums/postType.enum\";\nimport { CreatePostsMetaOptionsDto } from \"./create-posts-meta-options.dto\";\nimport { Type } from \"class-transformer\";\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\n\nexport class CreatePostDto {\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Title of the post',\n    example: 'My First Post'\n  })\n  title:string;\n\n  @IsEnum(postType)\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Type of the post',\n    enum: postType,\n    example: postType.POST\n  })\n  postType:postType;\n\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/,{\n    message:'slug like my-url'\n  })\n  @ApiProperty({\n    description: 'Slug for the post, should be URL friendly',\n    example: 'my-first-post'\n  })\n  slug:string;\n\n  @IsEnum(postStatus)\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Status of the post',\n    enum: postStatus,\n    example: postStatus.DRAFT\n  })\n  status:postStatus;\n\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'Content of the post, can be HTML or Markdown',\n    example: 'This is my first post'\n  })\n  content?:string;\n\n  @IsOptional()\n  @IsJSON()\n  @ApiPropertyOptional({\n    description: 'Configuration object for the post, can include various settings',\n    example: '{\"layout\": \"default\", \"sidebar\": true}'\n  })\n  schema?:string;\n\n  @IsUrl()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'URL of the featured image for the post',\n    example: 'https://example.com/image.jpg'\n  })\n  featuredImageUrl?:string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'Date when the post is scheduled to be published',\n    example: '2023-10-01T00:00:00Z'\n  })\n  publishOn?:Date;\n\n  @IsOptional()\n  @IsArray()\n  //for an array in the configuration object we pass each:true\n  @IsString({each:true})\n  @MinLength(3,{each:true})\n  @ApiPropertyOptional({\n    description: 'Array of tags associated with the post',\n    example: ['technology', 'nestjs', 'typescript']\n  })\n  tags?:String[];\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({each:true})\n  @Type(()=>CreatePostsMetaOptionsDto)\n  @ApiPropertyOptional({\n    type:'array',\n    required:false,\n    items:{\n      type:'object',\n      properties:{\n        key:{\n          type:'string'\n        },\n        value:{\n          type:'string'\n        }\n      }\n    }\n  })\n  metaOptions?:CreatePostsMetaOptionsDto[]\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostsMetaOptionsDto.html":{"url":"classes/CreatePostsMetaOptionsDto.html","title":"class - CreatePostsMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostsMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-posts-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-posts-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-posts-meta-options.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreatePostsMetaOptionsDto{\n  @IsNotEmpty()\n  @IsString()\n  key:string;\n\n  @IsNotEmpty()\n  value:any;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-users.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-users.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-users.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, {message: 'password must have these things'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-users.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsEmail, IsNotEmpty, IsOptional, IsString, Matches, MaxLength, MinLength} from 'class-validator'\n\n// second argument is an object that can be given to any of the decorators\nexport class CreateUserDTO{\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(3)\n    @MaxLength(96)\n    firstName:string;\n\n    @IsString()\n    @IsOptional()\n    @MinLength(3)\n    lastName?:string;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email:string;\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    @Matches( /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n      {\n        message:'password must have these things'\n      }\n    )\n    password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()@ApiPropertyOptional({description: 'Get user with a specific id', example: 1234})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsInt, IsNotEmpty, IsOptional } from \"class-validator\";\n\n  export class GetUsersParamDto{\n    @IsInt()\n    @IsOptional()\n    @ApiPropertyOptional({\n      description:'Get user with a specific id',\n      example:1234\n    })\n    @Type(()=>Number)\n    id:number;\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostsDto.html":{"url":"classes/PatchPostsDto.html","title":"class - PatchPostsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-posts.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID of the post to be updated'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-posts.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty,PartialType } from \"@nestjs/swagger\";\nimport { IsInt, IsNotEmpty } from \"class-validator\";\nimport { CreatePostDto } from \"./create-post.dto\";\n\nexport class PatchPostsDto extends PartialType(CreatePostDto){\n\n  @ApiProperty({\n    description: 'ID of the post to be updated',\n  })\n  @IsInt()\n  @IsNotEmpty()\n  id:number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDTO)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateUserDTO } from \"./create-users.dto\";\n//mapped types\nexport class PatchUserDto extends PartialType(CreateUserDTO){}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPosts\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPosts(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new post'})@ApiResponse({status: 201, description: 'Post created successfully'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(params)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostsDto: PatchPostsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update a post'})@ApiResponse({status: 200, description: 'Post updated successfully'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostsDto\n                                            \n                                                            PatchPostsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { PatchPostsDto } from './dtos/patch-posts.dto';\n\n@Controller('posts')\nexport class PostsController {\n  constructor(private readonly postsService:PostsService){}\n\n  @Get('/:id')\n  public getPosts(@Param() params){\n    console.log(params)\n    return this.postsService.findAll(params.id);\n  }\n\n\n  @ApiOperation({\n    summary: 'Create a new post',\n  })\n  @ApiResponse({\n    status: 201,\n    description: 'Post created successfully',\n  })\n  @Post()\n  public createPosts(@Body() createPostDto:CreatePostDto){\n  }\n\n  @ApiOperation({\n    summary: 'Update a post',\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Post updated successfully',\n  })\n  @Patch()\n  public updatePost(@Body() patchPostsDto:PatchPostsDto){}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUserModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UserModule } from 'src/users/users.module';\n\n@Module({\n  imports:[UserModule],\n  controllers: [PostsController],\n  providers:[PostsService]\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { UsersService } from \"src/users/providers/users.service\";\n\n\n@Injectable()\nexport class PostsService{\n  constructor(private readonly userService:UsersService){\n  }\n\n  public findAll(userId:string){\n    const user=this.userService.findOneById(userId)\n    return[\n      {\n        user:user,\n        title:'tiiei',\n        content:'test content'\n      },\n      {\n        user:user,\n        title:'tiieifsdf',\n        content:'test content'\n      }\n    ]\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUserModule\n\nUserModule\n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from \"@nestjs/common\";\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./providers/users.service\";\nimport { AuthModule } from \"src/auth/auth.module\";\n\n//forwardRef for the imports and injecting\n@Module({\n  imports:[forwardRef(()=>AuthModule)],\n  controllers:[UsersController],\n  providers:[UsersService],\n  exports:[UsersService]\n})\nexport class UserModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDTO, headers: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, query: any, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/')@ApiOperation({summary: 'fetches list of users'})@ApiResponse({status: 200, description: 'users fetched successfully'})@ApiQuery({name: 'limit', type: 'number', required: false, description: '', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: '', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUsers(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  DefaultValuePipe,\n  Get,\n  Headers,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDTO } from './dtos/create-users.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\n\n//http:localhost:3000/users\n@Controller('users')\nexport class UsersController {\n\n  constructor(private readonly usersService:UsersService){}\n\n\n\n  @Get('/:id/')\n  @ApiOperation({\n    summary:'fetches list of users'\n  })\n  @ApiResponse({\n    status:200,\n    description:'users fetched successfully'\n  })\n  @ApiQuery({\n    name:'limit',\n    type:'number',\n    required:false,\n    description:'',\n    example:10\n  })\n  @ApiQuery({\n    name:'page',\n    type:'number',\n    required:false,\n    description:'',\n    example:1\n  })\n  public getUsers(\n    @Param() getUsersParamDto: GetUsersParamDto,\n    @Query() query: any,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n\n    return this.usersService.findAll(getUsersParamDto,limit,page);\n  }\n\n  @Post()\n  public createUsers(@Body() createUserDto: CreateUserDTO, @Headers() headers: any) {\n    console.log(createUserDto);\n    console.log(headers);\n    return 'You sent a post req to users endpoint';\n  }\n\n  @Patch()\n  public patchUsers(@Body() patchUserDto:PatchUserDto){\n    return patchUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to connect to Users and do operations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n\n/**\n * Class to connect to Users and do operations\n */\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n  public findAll(\n    getUsersParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    const isAuth = this.authService.isAuth();\n    console.log(isAuth);\n    return [\n      {\n        firstName: 'john',\n        email: 'joe@yopmail.com',\n      },\n      {\n        firstName: 'alice',\n        email: 'mice@yopmail.com',\n      },\n    ];\n  }\n\n  public findOneById(id: string) {\n    return {\n      id: 1234,\n      firstName: 'alice',\n      email: 'mice@yopmail.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-posts-meta-options.dto.ts\n            \n            class\n            CreatePostsMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-posts.dto.ts\n            \n            class\n            PatchPostsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-users.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : github:nestjs/swagger\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../poststatus.enum.ts)\n                        \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/poststatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nPostsModule -->\n\nUserModule->PostsModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUserModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUserModule -->\n\nUsersService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
